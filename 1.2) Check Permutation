//Given 2 strings, write a method to decide if one is a permutation of other.
//Assumptions :- Case sensitive, White spaces matters, ASCII
//Do it in 0(n) time
//2 Methods 

#include <bits/stdc++.h>
using namespace std;

//METHOD 1): Create a hash of first string and then look if all the charcters of second string can be found in hash.
bool isPermutation(string str1, string str2){
    if( str1.length() != str2.length() ) return false;
    unordered_map<char, int> s1;
    for(int i=0;i<str1.length();++i){
        s1[str1[i]]++;
    }
    for(int i=0;i<str2.length();++i){
        if( s1.find(str2[i]) != s1.end() ){
            if( s1[str2[i]] > 1){
                --s1[str2[i]];
            }else {
                s1.erase(str2[i]);
            }
        }else{
            return false;
        }
    }
    return true;
}

int main()
{
    string str1 = "ab caef";
    string str2 = "efac ba";
    
   if (isPermutation(str1, str2)) cout<<"Yes";
   else cout<<"No";
   return 0;

}

//METHOD 2): Sort both the strings, then check corresponsding characters of the string simulatnously. 
